// Delete all the normal fuel tanks.

@PART[proceduralTankSRB]:NEEDS[RealFuels] { @name = proceduralSRBRealFuels }
!PART[proceduralTankRCS]:NEEDS[RealFuels] {}
!PART[proceduralTankXenon]:NEEDS[RealFuels] {}
!PART[proceduralConeLiquid]:NEEDS[RealFuels] {}

@PARTUPGRADE:HAS[#partIcon[proceduralTankLiquid]]:NEEDS[RealFuels]
{
    @partIcon = proceduralTankRealFuels
}

@PARTUPGRADE:HAS[#partIcon[proceduralTankSRB]]:NEEDS[RealFuels]
{
    @partIcon = proceduralSRBRealFuels
}

@PART[proceduralTankLiquid]:NEEDS[RealFuels]
{
	@name = proceduralTankRealFuels
	@title = #PP_Parts_TankRealFuels_title //Procedural Real Fuels Tank
	@description ^= #PP_Parts_TankRealFuels_description //:^:Baseline tank type. Accepts most fuels. Can be switched between unpressurised, balloon, cryogenic, ballooon cryo, and service module types.:

	@MODULE[ProceduralPart] { %costPerkL = 0.00957 }

	!MODULE[TankContentSwitcher] {}
	MODULE
	{
		name = ModuleFuelTanks

		volume = 1060
		utilizationTweakable = true
		type = Default
		typeAvailable = Default
		typeAvailable = Cryogenic
		typeAvailable = ServiceModule
		typeAvailable = Fuselage
		typeAvailable = Balloon
		typeAvailable = BalloonCryo
		typeAvailable = Structural
		typeAvailable = ElectricPropulsion
	}
}

@TANK_DEFINITION[Solid]:FOR[ProceduralParts]:NEEDS[RealFuels]
{
	!TANK,* {}
	// tank with same fuel as default CONFIG should start out full, so a default-placed part will show some burn time & dv
	// Default the current legacy fuel
	TANK
	{
		name = SolidFuel // Retain old default for generic "SolidFuel" so long as that exists in RF
		amount = full
		maxAmount = 100%
		cost = 0 // FIXME: we'd normally expect resource cost to handle this, but all solid fuels get zeros as resurce costs because it's all figured into the part costs. So would have to assign something here. cost is per-litre
		mass = 0 // *dry* mass in tons per liter of fuel. We don't need per-fuel-type variations here, so basemass is all we need to set. Might make sense to use this for a fuel that needs an unusually strong casing?
	}

	// Build tanks defined in RealFuels proper
	+TANK[SolidFuel] {
		@name = PSPC // sep motors, baby sergeant, altair I, castor, gcrc
		// the other fuels should default empty, since they all share the same volume
		@amount = 0
		@maxAmount = 0
	}

	+TANK[PSPC] { @name = HTPB } // star37e, antares iii
	+TANK[PSPC] { @name = PBAN } // altair iii, ua120x, rsrm
	+TANK[PSPC] { @name = NGNC } // tiny tim, Nike, etc. a reasonable default/starting fuel?
	+TANK[PSPC] { @name = HNIW } // waxwing, star17

	// Some RO fuels?
	//+TANK[PSPC]:NEEDS[RealismOverhaul] { @name = PBAA } // altair II, antares, castor 2
	//+TANK[PSPC]:NEEDS[RealismOverhaul] { @name = PUPE } // algol
	//+TANK[PSPC]:NEEDS[RealismOverhaul] { @name = CTPB } // waxwing, star17
}
